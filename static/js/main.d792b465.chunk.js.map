{"version":3,"sources":["components/app/app.module.scss","components/filter/filter.module.scss","components/contact-form/contact-form.js","components/contact-list/contact-list.js","components/filter/filter.js","components/app/app.js","reportWebVitals.js","index.js","components/contact-form/contact-form.module.scss","components/contact-list/contact-list.module.scss"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","this","className","s","form","label","type","onChange","pattern","title","required","button","Component","ContactList","contacts","handleDelete","contactItems","map","id","item","textContainer","onClick","list","Filter","filter","App","handleContactDelete","prevState","contact","handleFilterChange","addContact","find","concat","v4","alert","getFilteredContacts","filterNormaziled","toLowerCase","includes","lsContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","filteredContacts","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d792b465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3b7K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3Mx_2\"};","import s from './contact-form.module.scss';\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nclass ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n\n    this.props.onSubmit(name, number);\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <div>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label className={s.label}>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <label className={s.label}>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button className={s.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import s from './contact-list.module.scss';\nimport { PropTypes } from 'prop-types';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  const contactItems = contacts.map(({ id, name, number }) => (\n    <li key={id} className={s.item}>\n      <div className={s.textContainer}>\n        <span>\n          {name}: {number}\n        </span>\n        <button id={id} className={s.button} type=\"button\" onClick={handleDelete}>\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul className={s.list}>{contactItems}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './filter.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport s from './app.module.scss';\nimport { v4 } from 'uuid';\n\nimport ContactForm from '../contact-form';\nimport ContactList from '../contact-list';\nimport Filter from '../filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const lsContacts = localStorage.getItem('contacts');\n\n    if (lsContacts) {\n      this.setState({ contacts: JSON.parse(lsContacts) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  handleContactDelete = event => {\n    const { id } = event.target;\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  handleFilterChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  addContact = (name, number) => {\n    this.setState(prevState => {\n      if (prevState.contacts.find(contact => contact.name === name)) {\n        alert(`${name} is already in the contacts`);\n        return;\n      }\n\n      return {\n        contacts: prevState.contacts.concat({\n          name,\n          number,\n          id: v4(),\n        }),\n      };\n    });\n  };\n\n  getFilteredContacts = (contacts, filter) => {\n    const filterNormaziled = filter.toLowerCase();\n\n    return contacts.filter(({ name }) => {\n      const nameNormalized = name.toLowerCase();\n      return nameNormalized.includes(filterNormaziled);\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts(contacts, filter);\n\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleChange={this.handleFilterChange} />\n        <ContactList contacts={filteredContacts} handleDelete={this.handleContactDelete} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contact-form_form__3MHND\",\"label\":\"contact-form_label__1Tp34\",\"button\":\"contact-form_button__21-3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contact-list_list__8O1rE\",\"textContainer\":\"contact-list_textContainer__3muKM\",\"button\":\"contact-list_button__2LbBf\"};"],"sourceRoot":""}