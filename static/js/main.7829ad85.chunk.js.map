{"version":3,"sources":["components/contact-form/contact-form.module.scss","components/contact-list/contact-list.module.scss","components/app/app.module.scss","components/filter/filter.module.scss","components/contact-form/contact-form.js","components/contact-list/contact-list.js","components/filter/filter.js","components/app/app.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","Error","className","s","form","preventDefault","label","type","onChange","pattern","title","required","button","ContactList","contacts","handleDelete","contactItems","map","id","item","textContainer","onClick","list","Filter","filter","App","setContacts","setFilter","useEffect","lsContacts","localStorage","getItem","JSON","parse","setItem","stringify","filteredContacts","toLowerCase","includes","getFilteredContacts","container","prevContacts","find","contact","alert","concat","v4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7829ad85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contact-form_form__3MHND\",\"label\":\"contact-form_label__1Tp34\",\"button\":\"contact-form_button__21-3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contact-list_list__8O1rE\",\"textContainer\":\"contact-list_textContainer__3muKM\",\"button\":\"contact-list_button__2LbBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3b7K6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__3Mx_2\"};","import s from './contact-form.module.scss';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetFieldsToDefault = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error(`Unsupported text field ${name}`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.target.name.value;\n    const number = event.target.number.value;\n\n    onSubmit(name, number);\n    resetFieldsToDefault();\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import s from './contact-list.module.scss';\nimport { PropTypes } from 'prop-types';\n\nconst ContactList = ({ contacts, handleDelete }) => {\n  const contactItems = contacts.map(({ id, name, number }) => (\n    <li key={id} className={s.item}>\n      <div className={s.textContainer}>\n        <span>\n          {name}: {number}\n        </span>\n        <button id={id} className={s.button} type=\"button\" onClick={handleDelete}>\n          Delete\n        </button>\n      </div>\n    </li>\n  ));\n\n  return <ul className={s.list}>{contactItems}</ul>;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import s from './filter.module.scss';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ filter, handleChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={handleChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport s from './app.module.scss';\nimport { v4 } from 'uuid';\n\nimport ContactForm from '../contact-form';\nimport ContactList from '../contact-list';\nimport Filter from '../filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const lsContacts = localStorage.getItem('contacts');\n\n    if (lsContacts) {\n      setContacts(JSON.parse(lsContacts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleContactDelete = event => {\n    const { id } = event.target;\n    setContacts(prevContacts => prevContacts.filter(contact => contact.id !== id));\n  };\n\n  const handleFilterChange = event => {\n    const { value } = event.target;\n\n    setFilter(value);\n  };\n\n  const addContact = (name, number) => {\n    setContacts(prevContacts => {\n      if (prevContacts.find(contact => contact.name === name)) {\n        alert(`${name} is already in the contacts`);\n        return prevContacts;\n      }\n\n      return prevContacts.concat({\n        name,\n        number,\n        id: v4(),\n      });\n    });\n  };\n\n  const getFilteredContacts = (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} handleChange={handleFilterChange} />\n      <ContactList contacts={filteredContacts} handleDelete={handleContactDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\nimport App from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}